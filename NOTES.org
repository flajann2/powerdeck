* My personal notes for streamdeck-ui-hs
  These are my personal notes for this project. They
  are not promised to be uptodate or even
  accurate. They are only intended for myself and no
  one else.

  You may find something useful here, but it is not gauranteed.

** Goals
   + To be better than the Python version of the same for Linux
   + To be more on a par with the Windows supported version
   + To allow operation across multiple login accounts
   + To allow for better management of the keys and their icons.

** Strategy
   We want to rely on a FRP framework. We must select one to best
   suit our needs. Then the rest will flow.   

*** Attempts 
    + tried to set up emacs27 bit it failed famously,
      so back to 26
    + Back to the distro emacs
    + I am going to attempt to cut back everything in
      the stack.yaml, then add things one at a time as
      I need them, and if I need to, I will clone the
      libraries that I can't get to work any other way
      and make it work for my purposes.

      In this way, I can still make progress, even if
      it will take me longer. The benefit is that I
      will have made current those libraries I
      need. And I can eventually release them under new
      names.
    + The attempt worked, and now I have dbus and hidapi
      working. The rest should be cakewalk

*** Reverse Engineering the Python
    I am looking at the Python library to the Stream Deck, and well
    the code could be better, but so be it. It sort of works for
    StreamDeck, and better than no code at all for Linux.

    It's very object oriented, and the temptation is to simply
    copy it's API into Haskell. I want to give some thoughts as
    to how this should work.

    Also, it is not clear to me how events are handled in the Python
    code. If I didn't know any better, it's polling StreamDeck
    for a change of state, which would be lame. But we need to
    understand that and also work out the FRP bit before
    we start out design/architecture for Haskell.
